# model = Sequential()
# model.add(Input(shape=input_shape))

# # Parameters for each block
# cnn_blocks = [
#         {"filters": 64, "layers": 2},
#         {"filters": 128, "layers": 3},
#         {"filters": 256, "layers": 4},
#         {"filters": 256, "layers": 4},
#         {"filters": 512, "layers": 4}
#     ]

# for block in cnn_blocks:
#     for layer in range(block["layers"]):
#         model.add(Conv2D(block['filters'], kernel_size=(3, 3), activation='relu', padding='same'))
#         model.add(BatchNormalization())
#     model.add(MaxPooling2D(pool_size=(2, 2)))
#     model.add(Dropout(0.3))

# model.add(Flatten())
# model.add(Dense(output_class, activation="softmax"))

# opt = Adam(learning_rate=0.0001)
# model.compile(loss='categorical_crossentropy', optimizer=opt, metrics=['accuracy'])